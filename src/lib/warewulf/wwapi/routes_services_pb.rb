# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: routes.proto for package 'wwapi.v1'
# Original file comments:
# Routes for the wwapi (WareWulf API).
# TODO: Try protoc-gen-doc for generating documentation.
#

require 'grpc'
require 'routes_pb'

module Wwapi
  module V1
    module WWApi
      # WWApi defines the wwapid service web interface.
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'wwapi.v1.WWApi'

        # Containers
        #
        # ContainerBuild builds zero or more containers.
        rpc :ContainerBuild, ::Wwapi::V1::ContainerBuildParameter, ::Wwapi::V1::ContainerListResponse
        # ContainerDelete removes one or more container from Warewulf management.
        rpc :ContainerDelete, ::Wwapi::V1::ContainerDeleteParameter, ::Google::Protobuf::Empty
        # ContainerImport imports a container to Warewulf.
        rpc :ContainerImport, ::Wwapi::V1::ContainerImportParameter, ::Wwapi::V1::ContainerListResponse
        # ContainerList lists ContainerInfo for each container.
        rpc :ContainerList, ::Google::Protobuf::Empty, ::Wwapi::V1::ContainerListResponse
        # ContainerShow lists ContainerShow for each container.
        rpc :ContainerShow, ::Wwapi::V1::ContainerShowParameter, ::Wwapi::V1::ContainerShowResponse
        # Nodes
        #
        # NodeAdd adds one or more nodes for management by Warewulf and returns
        # the added nodes. Node fields may be shimmed in per profiles.
        rpc :NodeAdd, ::Wwapi::V1::NodeAddParameter, ::Wwapi::V1::NodeListResponse
        # NodeDelete removes one or more nodes from Warewulf management.
        rpc :NodeDelete, ::Wwapi::V1::NodeDeleteParameter, ::Google::Protobuf::Empty
        # NodeList lists some or all nodes managed by Warewulf.
        rpc :NodeList, ::Wwapi::V1::NodeNames, ::Wwapi::V1::NodeListResponse
        # NodeSet updates node fields for one or more nodes.
        rpc :NodeSet, ::Wwapi::V1::NodeSetParameter, ::Wwapi::V1::NodeListResponse
        # NodeStatus returns the imaging state for nodes.
        # This requires warewulfd.
        rpc :NodeStatus, ::Wwapi::V1::NodeNames, ::Wwapi::V1::NodeStatusResponse
        # Version returns the wwapi version, the api prefix, and the Warewulf
        # version. This is also useful for testing if the service is up.
        rpc :Version, ::Google::Protobuf::Empty, ::Wwapi::V1::VersionResponse
      end

      Stub = Service.rpc_stub_class
    end
  end
end
